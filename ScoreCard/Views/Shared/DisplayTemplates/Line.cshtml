@model ScoreCard.Models.Line

@{
    Layout = null;
    bool exp = Model.scores.Count > 0;
    bool qtr = Model.symbol == "%";
    bool avg = qtr || Model.symbol == "sum";
    bool t8 = Model.symbol == "%>=8";
    var prefix = Model.LineId + "_0_0_";
}
@if (Model.symbol == "blank")
{
    <tr class="topscore" data-lineid="@Model.LineId">
        <td class="major"><strong>&nbsp;@Model.item &nbsp;</strong></td>
        <td colspan="13"><strong>@Model.Description</strong></td>
    </tr>
}
else
{
    <tr data-lineid="@Model.LineId" data-scoreid="@Model.topdown.ScoreId" data-scale="@(Math.Pow(10,Model.DecimalPoint))" class="score @(exp?"line":"") @(avg?"havg":"") @(qtr ? "qtr" : "") @(t8?"t8":"")">
        <td class="major"></td>
        <td class="minor">@Model.item</td>
        <td colspan="2">@Model.Description</td>
        <td>@Model.symbol @if (exp)
        {<i class="fa fa-caret-right"></i>}</td>
        <td class="owner" title="@Model.owntip">@Model.owner</td>
        <td>
        @if (Model.ShowTotal) { 
            @Html.DisplayFor(m => m.topPriorTotal, new { @class = "priorval", mask = @Model.DecimalPoint, ro = true, id = prefix + "prior" })
        }
        </td>
        <td>
            @*@Html.DisplayFor(m => m.topTarget, new { @class = "targval", mask = @Model.DecimalPoint, ro = !@Model.CanEdit, id = prefix + "target" })*@
        </td>
        <td>
        @if (Model.ShowTotal) {
            @Html.DisplayFor(m => m.topTotal, new { @class = "yearval", mask = @Model.DecimalPoint, ro = true, id = prefix + "total" })
        }
        </td>
        <td>@Html.DisplayFor(m => m.topQ1, new { @class = "quarval", mask = @Model.DecimalPoint, ro = !@Model.CanEdit, id = prefix + "1" })</td>
        <td>@Html.DisplayFor(m => m.topQ2, new { @class = "quarval", mask = @Model.DecimalPoint, ro = !@Model.CanEdit, id = prefix + "2" })</td>
        <td>@Html.DisplayFor(m => m.topQ3, new { @class = "quarval", mask = @Model.DecimalPoint, ro = !@Model.CanEdit, id = prefix + "3" })</td>
        <td>@Html.DisplayFor(m => m.topQ4, new { @class = "quarval", mask = @Model.DecimalPoint, ro = !@Model.CanEdit, id = prefix + "4" })</td>
        @if (Model.CanEdit)
        {
            <td>@Html.TextBoxFor(m => m.topdown.Comment, new { @class = "scoreComment", id = prefix + "comment" })</td>
        }
        else
        {
            <td>@Html.TextBoxFor(m => m.topdown.Comment, new { @class = "scoreComment", @readonly = "readonly", id = prefix + "comment" })</td>
        }
    </tr>
    if (Model.scores.Count() > 0)
    {
        @Html.DisplayFor(m=>m.bottomup)
    }
@Html.DisplayFor(m=>m.scores)
}
