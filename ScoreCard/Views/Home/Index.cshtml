@model Card

@{
    ViewBag.Title = Model.Year + " Global Value Tracking";
    var yy = Model.Year % 100;
    var prior = string.Format("{0}-{1}", yy - 2, yy - 1);
    var current = string.Format("{0}-{1}", yy - 1, yy);
}

<div class="row">
    <div class="col-md-12">
        @using (Html.Bootstrap().Begin(new Table().Id("scoreCard").Condensed().Hover()))
        {
            <colgroup>
                <col width="20px" />
                <col width="33px" />
                <col width="200px" />
                <col width="100px" />
                <col width="70px" />
                <col width="80px" />
                <col width="70px" />
                <col width="70px" />
                <col width="70px" />
                <col width="70px" />
                <col width="70px" />
                <col width="70px" />
                <col width="70px" />
                <col width="180px" />
            </colgroup>
            <thead>
            <tr class="scoreheader">    <!-- 14 columns -->
                <th colspan="4">Area</th>
                <th rowspan="2">Measure</th>
                <th rowspan="2">Owner</th>
                <th>@(prior)</th>
                <th colspan="2">@(current)</th>
                <th colspan="2">@(Model.Year-1)</th>
                <th colspan="2">@(Model.Year)</th>
                <th></th>
            </tr>

            <tr class="scoreheader">
            <th></th>
            <th></th>
            <th class="leftee"><em>Function</em></th>
            <th class="leftee">Site</th>
            <th>Total</th>
            <th>Target</th>
            <th>Total</th>
            <th>JAS</th>
            <th>OND</th>
            <th>JFM</th>
            <th>AMJ</th>
            <th>Comment</th>
            </tr>
            </thead>
            <tbody>
            @Html.DisplayFor(m=>m.Lines)
            </tbody>
        } 
    </div>
</div>

@section scripts {
<script src="~/Scripts/jquery.signalR-2.2.0.min.js" type="text/javascript"></script>
<script src="~/signalr/hubs" type="text/javascript"></script>
<script type="text/javascript">
    function summer(rw, pre, suf)
    {
        var sum = 0;
        var n = 0;

        var scope = '[data-lineid=' + rw.data('lineid') + ']';
        var search = '[id^=' + pre + '][id$=' + suf + ']';
        $(search, scope).each(function () {
            var i = $(this).attr('id');
            var s = i.length - pre.length - suf.length;
            var x = i.substr(pre.length, s);
            if (x!='0') {
                var item = Number($(this).val());
                sum += item;
                if (item != 0) n++;
            }
            // console.log($(this).attr('id')+': '+x+' '+$(this).val() + ' E '+ sum);
        });
        // console.log('-----');
        if (rw.hasClass('avg')) sum /= (n==0?1:n);
        return sum;
    }
    function rowcalc(target) {
        var sum = 0;
        var n = 0;
        rw = $(target).closest('tr');
        $('.quarval', rw).each(function() {
            var item =  Number($(this).val());
            sum += item
            if (item != 0) n++;
        });
        console.log(rw.hasClass('avg')+" for avg and n = "+n);
        if (rw.hasClass('avg')) sum /= (n==0?1:n);
        $(target, rw).val(sum);
    }
    // id is line_group_site_(quarter|comment|total|prior|target)
    function recalc(e, path) {
        var sum = 0;
        var n = 0;
        var rw = e.closest('tr');
        var q = 0;

        $('.quarval', rw).each(function () {
            var item = Number($(this).val());
            sum += item;
            if (item!=0) n++;
            var p = $(this).attr('id').split('_');      // check for entries in value
            var qrt = p[p.length-1];
            if (item == 0 && qrt > q)                 // last non-zero value
                q = qrt;
        });
        if (rw.hasClass('avg')) sum /= (n==0?1:n);
        $('.yearval', rw).val(sum);     // total on row
            //cuetarget($('.yearval', rw), Number($('.targval', rw).val() * q), Number(4 * sum));           // color target according to last entered value
        if (!isNaN(path[3]) && path[1]!='0') {                                         // no vertical sum needed if line total was edited
            var target = '#' + path[0]+'_'+path[1]+'_0_'+path[3];            // line_group_0_(quarter|target)
            var prefix = path[0]+'_'+path[1]+'_';
            var suffix = '_'+path[3];
            $(target).val(summer(rw, prefix, suffix));                              // update (quarter|target) total on column for all sites in this group

            target = '#'+ path[0]+'_0_0_'+path[3];                                 // line_0_0_(quarter|target)
            prefix = path[0]+'_';
            suffix = '_0_'+path[3];
            $(target).val(summer(rw, prefix, suffix));                              // update quarter total for all groups on this line

            rowcalc('#' + path[0] + '_' + path[1] + '_0_total');                 // line_group_0_total
            rowcalc('#' + path[0] + '_0_0_total');                                    // line_0_0_total
        }
    }
    function retarget(e, path) {
        if (path[1] == "0" && path[2] == "0")
            return;

        var target = '#' + path[0]+'_'+path[1]+'_0_'+path[3];            // line_group_0_target
        var prefix = path[0]+'_'+path[1]+'_';
        var suffix = '_'+path[3];
        var rw = e.closest('tr');

        $(target).val(summer(rw, prefix, suffix));                              // update target total on column for all sites in this group

        target = '#'+ path[0]+'_0_0_'+path[3];                                 // line_0_0_target
        prefix = path[0]+'_';
        suffix = '_0_'+path[3];
        $(target).val(summer(rw, prefix, suffix));                              // update quarter total for all groups on this line
    }
    function toggler(e) {
        var caret = $('i.fa', e.currentTarget);
        var scope = '.' + e.data.rows + '[data-lineid=' + $(this).data('lineid') + ']';
        if (e.data.rows == 'site')
            scope += '[data-groupid=' + $(this).data('groupid') + ']';

        if (caret.attr('class').indexOf('right') > 0) {
            var range = $(scope);
            caret.removeClass("fa-caret-right").addClass("fa-caret-down");
            $(this).addClass("undertotal");
            range.last().addClass("underline");
            range.show();
            if ($(this).hasClass("underline")) {
                range.last().addClass("last");
                $(this).removeClass("underline");
            }
        }
        else {
            if (e.data.rows == 'group')
                scope = scope + ',' + scope.replace('group', 'site');
            var range = $(scope);
            caret = $('i.fa', scope).add(caret);
            caret.removeClass("fa-caret-down").addClass("fa-caret-right");
            $(this).add(range).removeClass("undertotal");
            range.hide();
            range.last().removeClass("underline")
            if (range.last().hasClass("last")) {
                range.last().removeClass("last");
                $(this).addClass("underline");
            }
        }
    }
    $(function () {
        $(":input").inputmask();
        $('#scoreCard tr.line').on('click', { rows: 'group' }, toggler);
        $('#scoreCard tr.group').on('click', { rows: 'site' }, toggler);
        var card = $.connection.scoreHub;
        card.client.reflectCell = function (scoreid, quarterid, value) {
            var target = $('[id$=_' + quarterid + ']', '[data-scoreid=' + scoreid + ']');
            var row = target.closest('tr');
            var scale = row.data('scale');
            target.val(value / (+scale));
            var path = target.attr('id').split('_');
            recalc(target, path);
        };
        card.client.reflectTarget = function (scoreid, value) {
            var target = $('[id$=_target]', '[data-scoreid=' + scoreid + ']');
            target.val(value);
        };
        card.client.reflectComment = function (scoreid, comment) {
            var target = $('[id$=_comment]', '[data-scoreid=' + scoreid + ']');
            target.val(comment);
        };
        $.connection.hub.disconnected(function() {
            setTimeout(function() {
                $.connection.hub.start();
            }, 5000); // Re-start connection after 5 seconds
        });
        $.connection.hub.start().done(function () {
            card.server.setYear(@Model.Year, @Model.Year);
            $('.quarval').on('change', function () {
                var path = $(this).attr('id').split('_');
                var row = $(this).closest('tr');
                var sid = Number(row.data('scoreid'));
                if (sid == 0)
                    sid = -Number(row.data('lineid'));
                var scale = row.data('scale');
                var qid = Number(path[3]);
                console.log('year, sid, qid, value '+@Model.Year+', '+sid+', '+qid+', '+Number($(this).val()*scale));
                card.server.updateCell(@Model.Year, sid, qid, Number($(this).val()*scale));
                recalc($(this), path);
            });
            $('.targval').on('change', function() {
                var path = $(this).attr('id').split('_');
                var row = $(this).closest('tr');
                var sid = Number(row.data('scoreid'));
                if (sid == 0)
                    sid = -Number(row.data('lineid'));
                var scale = row.data('scale');
                console.log('year, sid, value '+@Model.Year+', '+sid+', '+Number($(this).val()*scale));
                card.server.updateTarget(@Model.Year, sid, Number($(this).val()*scale));
                retarget($(this), path);
            });
            $('.scoreComment').on('change', function () {
                var row = $(this).closest('tr');
                var sid = Number(row.data('scoreid'));
                if (sid == 0)
                    sid = -Number(row.data('lineid'));
                var val = $(this).val();
                console.log('scoreid '+sid+', val '+ val);
                card.server.updateComment(@Model.Year, sid, val);
            });
        });
    });
</script>
}