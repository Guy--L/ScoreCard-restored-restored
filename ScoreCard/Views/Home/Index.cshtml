@model Card

@{
    ViewBag.Title = Model.Year + " Global Value Tracking";
    var yy = Model.Year % 100;
    var prior = string.Format("{0}-{1}", yy - 2, yy - 1);
    var current = string.Format("{0}-{1}", yy - 1, yy);
}

<div class="row">
    <div class="col-md-12">
        @using (Html.Bootstrap().Begin(new Table().Id("scoreCard").Condensed().Hover()))
        {
            <thead>
            <tr class="scoreheader">
                <th colspan="6"></th>
                <th>@(prior)</th>
                <th colspan="2">@(current)</th>
                <th colspan="2">@(Model.Year-1)</th>
                <th colspan="2">@(Model.Year)</th>
                <th></th>
            </tr>

            <tr class="scoreheader">
            <th colspan="4">Area</th>
            <th>Measure</th>
            <th>Owner</th>
            <th>Total</th>
            <th>Target</th>
            <th>Total</th>
            <th>JAS</th>
            <th>OND</th>
            <th>JFM</th>
            <th>AMJ</th>
            <th>Comment</th>
            </tr>
                </thead>
            @Html.DisplayFor(m=>m.Lines)
        } 
    </div>
</div>

@section scripts {
<script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>
<script type="text/javascript">
    function touchback() {
        $("input[class*=text-").each(function () {
            var cue = $(this).attr("class").match(/text[\w-]*\b/)[0].substr(5);
            console.log(cue);
            $(this).closest('td').removeClass("danger success primary").addClass(cue);
        });
    }
    function cuetarget(e, t, s) {
        var cue = "-primary";
        if (t > s) cue = "danger";
        if (t < s) cue = "success";
        e.removeClass("text-danger text-success text-primary").addClass("text-" + cue);
        $(this).closest('td').removeClass("danger success primary").addClass(cue);
    }
    function recalc(e, path) {
        console.log(path);
        var sum = 0;
        var rw = e.closest('tr');
        var q = 0;
        $('.quarval', rw).each(function () {
            var item = Number($(this).val());
            sum += item;
            var p = $(this).attr('id').split('_');
            var qrt = p[p.length-1][1];
            if (item == 0 && qrt > q)
                q = qrt;
        });
        $('.yearval', rw).val(sum);     // total on row
        //cuetarget($('.yearval', rw), Number($('.targval', rw).val() * q), Number(4 * sum));

        if (path[3] == 'scores') {
            var target = '#' + path.slice(0, 3).join('_') + '_sub' + path.slice(5).join('_');
            var prefix = path.slice(0, 4).join('_');
            var suffix = path.slice(5).join('_');
            sum = 0;
            var scope = '[data-lineid=' + rw.data('lineid') + ']';
            var search = '[id^=' + prefix + '][id$=' + suffix + ']';
            $(search, scope).each(function () {
                sum += Number($(this).val());
            });
            $(target).val(sum);         // total on column

            scope = $(target).closest('tr');
            target = '#' + path.slice(0, 3).join('_') + '_sub_Total'
            search = '[id^=' + path.slice(0, 3).join('_') + '_sub_Q]';
            sum = 0;
            $(search, scope).each(function () {
                sum += Number($(this).val());
            });
            $(target).val(sum);
        }
    }
    $(function () {
        $(":input").inputmask();
        var card = $.connection.scoreHub;
        card.client.reflectLine = function (lineid, scoreid, q1, q2, q3, q4, comment) {

        };
        card.client.reflectCell = function (scoreid, quarterid, value) {
            var target = $('[id$=Q' + quarterid + ']', '.subscore[data-scoreid=' + scoreid + ']');
            var row = target.closest('tr');
            var scale = row.data('scale');
            target.val(value / (+scale));
            var path = target.attr('id').split('_');
            recalc(target, path);
        };
        card.client.reflectComment = function (scoreid, comment) {
            var target = $('[id$=Comment]', '.subscore[data-scoreid=' + scoreid + ']');
            target.val(comment);
        };
        $('tr.details').on('click', function () {
            var caret = $('i.fa', $(this));
            var scope = '.subscore[data-lineid=' + $(this).data('lineid') + ']';
            if (caret.attr('class').indexOf('right') > 0) {
                caret.removeClass("fa-caret-right").addClass("fa-caret-down");
                $(this).addClass("undertotal");
                $(scope).last().addClass("underline");
                $(scope).toggle();
            } 
            else {
                caret.removeClass("fa-caret-down").addClass("fa-caret-right");
                $(this).removeClass("undertotal");
                $(scope).toggle();
                $(scope).last().removeClass("underline");
            }
        });
        $.connection.hub.start().done(function () {

            card.server.setYear(@Model.Year, @Model.Year);
            
            $('.quarval').on('change', function () {
                var path = $(this).attr('id').split('_');
                var row = $(this).closest('tr');
                var sid = Number(row.data('scoreid'));
                if (sid == 0)
                    sid = -Number(row.data('lineid'));
                var scale = row.data('scale');
                var qid = Number(path[path.length - 1][1]);
                card.server.updateCell(@Model.Year, sid, qid, Number($(this).val()*scale));
                recalc($(this), path);
            });
            
            $('.scoreComment').on('change', function () {
                var row = $(this).closest('tr');
                var sid = Number(row.data('scoreid'));
                if (sid == 0)
                    sid = -Number(row.data('lineid'));
                var val = $(this).val();
                console.log('scoreid '+sid+', val '+ val);
                card.server.updateComment(@Model.Year, sid, val);
            });
        });

    });
</script>
}