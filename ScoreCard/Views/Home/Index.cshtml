@model Card

@{
    ViewBag.Title = Model.Year + " Score Card";
}

<div class="page-header">
    <h2>ICO @Model.Year Global Value Tracking</h2>
</div>

<div class="row">
    <div class="col-md-12">
        @using (Html.Bootstrap().Begin(new Table().Id("scoreCard").Condensed().Hover()))
        {
            <tr class="scoreheader">
            <th colspan="3">Area</th>
            <th>Measure</th>
            <th>Owner</th>
            <th>FY<br/>Target</th>
            <th>FY<br/>Total</th>
            <th>JAS</th>
            <th>OND</th>
            <th>JFM</th>
            <th>AMJ</th>
            <th>Comment</th>
            </tr>
            @Html.DisplayFor(m=>m.Lines)
        } 
    </div>
</div>

@section scripts {
<script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>
<script type="text/javascript">
    function recalc(e, path) {
        var sum = 0;
        var rw = e.closest('tr');
        $('.quarval', rw).each(function () {
            sum += Number($(this).val());
        });
        $('.yearval', rw).val(sum);     // total on row

        if (path[3] == 'scores') {
            var target = '#' + path.slice(0, 3).join('_') + '_sub' + path.slice(5).join('_');
            var prefix = path.slice(0, 4).join('_');
            var suffix = path.slice(5).join('_');
            sum = 0;
            var scope = '[data-lineid=' + rw.data('lineid') + ']';
            var search = '[id^=' + prefix + '][id$=' + suffix + ']';
            $(search, scope).each(function () {
                sum += Number($(this).val());
            });
            $(target).val(sum);         // total on column
        }
    }
    $(function () {
        $('.subscore').hide();
        var card = $.connection.scoreHub;
        card.client.reflectCell = function (scoreid, quarterid, value) {
            var target = $('[id$=Q' + quarterid + ']', '.subscore[data-scoreid=' + scoreid + ']');
            target.val(value);
            var path = target.attr('id').split('_');
            recalc(target, path);
        };
        card.client.reflectComment = function (scoreid, comment) {
            var target = $('[id$=Comment]', '.subscore[data-scoreid=' + scoreid + ']');
            target.val(comment);
        };
        $('tr.details').on('click', function () {
            var caret = $('i.fa', $(this));
            var scope = '.subscore[data-lineid=' + $(this).data('lineid') + ']';
            if (caret.attr('class').indexOf('right') > 0) {
                caret.removeClass("fa-caret-right").addClass("fa-caret-down");
                $(scope).toggle();
            } 
            else {
                caret.removeClass("fa-caret-down").addClass("fa-caret-right");
                $(scope).toggle();
            }
        });
        $.connection.hub.start().done(function () {
            $('.quarval').on('change', function () {
                var path = $(this).attr('id').split('_');
                var sid = Number($(this).closest('tr').data('scoreid'));
                var qid = Number(path[6][1]);
                var val = Number($(this).val());
                card.server.updateCell(sid, qid, val);
                recalc($(this), path);
            });
            $('.scoreComment').on('change', function () {
                var sid = Number($(this).closest('tr').data('scoreid'));
                var val = $(this).val();
                card.server.updateComment(sid, val);
            });
        });

    });
</script>
}