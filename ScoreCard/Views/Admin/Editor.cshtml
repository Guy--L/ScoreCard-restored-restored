@model ScoreCard.Models.WorkerView

@{
    ViewBag.Title = "Select Edit Rights for " + Model.w.FirstName + " " + Model.w.LastName;
    List<IHtmlString> buttons = new List<IHtmlString>() {
            Html.Bootstrap().SubmitButton().Text("Save").Id("save").Style(ButtonStyle.Success),
            Html.Raw(" "),
            Html.Bootstrap().SubmitButton().Text("Cancel").Id("cancel").Style(ButtonStyle.Danger)
    };
}
<h3>@ViewBag.Title</h3>

    @using (var form = Html.Bootstrap().Begin(new Form("UpdateEditor", "Admin").Id("editorform")))
    {
        @Html.HiddenFor(m => m.Cancel)
        @Html.HiddenFor(m => m.w.WorkerId)
        @Html.HiddenFor(m => m.jRights)
        @Html.HiddenFor(m => m.w.IonName)
        @Html.HiddenFor(m => m.groupids)
        <div class="row-fluid">
            <div class="col-md-12">
                <div class="well well-sm">
                    @form.FormGroup().CheckBoxFor(m => m.w.IsAdmin).Label().LabelHtml(Html.Raw("Is an Administrator? &nbsp;<i class='fa fa-briefcase'></i>")).ShowRequiredStar(false)
                 </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="col-md-6">
                @using (var p = Html.Bootstrap().Begin(new Panel()))
                {
                    @p.Heading(Model.permits.Count() + " local right" + (Model.permits.Count()==1?"":"s"))
                    using (p.BeginBody()) { 
                    <div class="row">
                        <div class="col-md-6">
                            @Html.Bootstrap().LabelFor(m => m.groups).LabelText("Groups")
                            <div class="list-group">
                                @foreach (var b in Model.groupList.Skip(1))
                                {
                                    var grp = Model.groups.Single(q => q.GroupId == b.Key);
                                    <a href="#" class="list-group-item grpli" data-id="@grp.GroupId"><span class="badge">@b.Value</span>@grp._Group</a>
                                }
                            </div>
                            <div class="alert alert-danger">
                                <i class="fa fa-question"></i><br /><small>
                                <ol>
                                    <li>Select <b>Group</b> above</li>
                                    <li>Select <b>Sites</b> using Ctrl-Click on the right</li>
                                </ol>
                                </small>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @Html.Bootstrap().LabelFor(m => m.sites).LabelText("Sites")
                            @Html.Bootstrap().ListBoxFor(m => m.siteids, Model.siteList).HtmlAttributes(new { size = 22 }).Tooltip("ctrl+click for multiple selection")
                        </div>
                    </div>
                    }
                }
            </div>
            <div class="col-md-6">
                @using (var q = Html.Bootstrap().Begin(new Panel()))
                {
                    @q.Heading(Model.owned.Count() + " line" + (Model.owned.Count() == 1 ? "" : "s") + " owned")
                    using (q.BeginBody())
                    {
                        @Html.Bootstrap().LabelFor(m => m.lines).LabelText("Lines")
                        @Html.Bootstrap().ListBoxFor(m => m.lineids, Model.lineList).HtmlAttributes(new  { size = 22 }).Tooltip("ctrl+click for multiple selection")
                    }
                }
            </div>
        </div>
        <div class="row-fluid">
            <div class="col-md-offset-5">
                @(form.FormGroup().CustomControls(buttons.ToArray()))
            </div>
        </div>
    }

@section scripts{
    <script type="text/javascript">
        var sites = $('#@Html.IdFor(m=>m.siteids)');
        var lines = $('#@Html.IdFor(m=>m.lineids)');
        var old = @Model.jRights;
        var map = @Model.jRights;
        var lineold = @Model.lineRights;
        var linemap = @Model.lineRights;
        var gid = 0;
        $('.grpli').on('click', function () {
            gid = $(this).data('id');
            sites.val(map[gid]);
            $('label[for="sites"]').text('Sites as '+$(this).text().replace(/(\d+|All)/g, ''));
        });
        $('#cancel').on('click',function () {
            $('#@Html.IdFor(m=>m.Cancel)').val(true);
        });
        sites.on('click', function() {
            var picked = sites.val();
            if (picked == null) picked = [];
            var badge = picked.length;
            map[gid]=picked;
            $('[data-id="'+gid+'"] span').text(badge);
        });
        lines.on('click', function() {
            var picked = lines.val();
            if (picked == null) picked = [];
            var owned = picked.length;
            linemap = picked;
        });
        $('#save').on('click', function () {
            $('#@Html.IdFor(m=>m.jRights)').val(JSON.stringify(map));
        });
        $(function() {
            lines.val(@Model.lineRights);
            $('.grpli').each(function () {
                var grid = $(this).data('id');
                if (map != null && map[grid] != null && map[grid].length == 0)
                    return true;
                sites.val(map[grid]);
                $('label[for="sites"]').text('Sites as '+$(this).text().replace(/(\d+|All)/g, ''));
                $(this).focus();
                return false;
            });
        });
    </script>
}


